# [tool.hatch...]

[env]
requires = [
  "hatch-pip-compile",
]

# [default.extra-scripts]
# pip = "{env:HATCH_UV} pip {args}"

[envs.default]
# installer = "uv"
type = "pip-compile"
pip-compile-resolver = "uv"
# lock-filename = "requirements.lock"

[envs.hatch-test]
default-args = [
  "src",
] # testスクリプトを本体と同じディレクトリに置く
#----
[envs.default.env-vars]
CIDFILE = ".cowsay-distroless.cid"
IMGNAME = "cowsay-distroless"
MODNAME = "cowsay_distroless"

[version]
path = "src/cowsay_distroless/__about__.py"

[envs.types]
extra-dependencies = [
  "mypy>=1.0.0",
]

[envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/cowsay_distroless tests}"

[envs.default.scripts]
# main = "python src/cowsay_distroless/__main__.py"
main = "python -m cowsay_distroless"

bump = [
  "hatch version patch",
  "git add --all",
  "git commit -am \"v$(hatch version)\"",
  "git tag -a \"v$(hatch version)\" -m \"v$(hatch version)\"",
]

build = [
  "rm -rf ./dist",
  "hatch build",
]

"build-docker" = [
  "hatch build",
  """docker build . \\
  --build-arg BDIST="$MODNAME-$(hatch version)-py3-none-any.whl" \\
  -t $IMGNAME:$(hatch version)""",
  "docker tag $IMGNAME:$(hatch version) $IMGNAME:latest",
  "docker images $IMGNAME",
]

"start-docker" = "docker run --rm $IMGNAME:latest"

"it" = "docker run -it --rm $IMGNAME:latest /bin/bash"
# ↑Dockerfile0用. distrolessはbashがない

# "log" = "docker logs $(cat $CIDFILE)"
# "logf" = "docker logs -f $(cat $CIDFILE)"

# "stop-docker" = [
#   "docker stop $(cat $CIDFILE)",
#   "docker rm $(cat $CIDFILE)",
# ]
